#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define MAIN 0
#define SYM 1
#define NAV 2
#define FN 3

&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <250>;
};

/ {
    behaviors {
        dot_excl: dot_excl {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_EXCL";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp EXCL>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        skq: sticky_key_quick_release {
            compatible = "zmk,behavior-sticky-key";
            label = "STICKY_KEY_QUICK_RELEASE";
            #binding-cells = <1>;
            bindings = <&kp>;
            release-after-ms = <1000>;
            quick-release;
        };

        my_macro: my_macro {
            compatible = "zmk,behavior-macro";
            label = "ZM_my_macro";
            #binding-cells = <0>;
            wait-ms = <30>;
            tap-ms = <40>;
            bindings = <&kp Z &kp M &kp K>;
        };

        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&lt FN COMMA>, <&kp LS(COMMA)>;
        };
        
        td1: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_1";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp DOT>, <&kp LS(DOT)>;
        };

        td2: tap_dance_2 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_2";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&skq RSHFT>, <&kp LS(CAPS)>;
        };

        td3: tap_dance_3 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_3";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp GRAVE>, <&kp LC(RA(N1))>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <30>;
            key-positions = <21 22>;
            bindings = <&kp ESC>;
            layers = <0>;
        };

        combo_tab {
            timeout-ms = <30>;
            key-positions = <22 23>;
            bindings = <&kp TAB>;
            layers = <0>;
        };

        combo_o1 {
            timeout-ms = <30>;
            key-positions = <2 3>;
            bindings = <&kp LS(N8)>; // (
            layers = <0>;
        };

        combo_o2 {
            timeout-ms = <30>;
            key-positions = <12 13>;
            bindings = <&kp LC(RA(LBKT))>;  // [
            layers = <0>;
        };

        combo_o3 {
            timeout-ms = <30>;
            key-positions = <23 24>;
            bindings = <&kp LC(RA(SQT))>; // {
            layers = <0>;
        };

        combo_o4 {
            timeout-ms = <30>;
            key-positions = <11 12>;
            bindings = <&kp NUBS>; // <
            layers = <0>;
        };

        combo_c1 {
            timeout-ms = <30>;
            key-positions = <4 5>;
            bindings = <&kp LS(N9)>;  // )
            layers = <0>;
        };

        combo_c2 {
            timeout-ms = <30>;
            key-positions = <14 15>;
            bindings = <&kp LC(RA(RBKT))>; // ]
            layers = <0>;
        };

        combo_c3 {
            timeout-ms = <30>;
            key-positions = <25 26>;
            bindings = <&kp LC(RA(BSLH))>; // }
            layers = <0>;
        };

        combo_c4 {
            timeout-ms = <30>;
            key-positions = <15 16>;
            bindings = <&kp LS(NUBS)>; // >
            layers = <0>;
        };
    };

    /* 
          ╭───────────────────────╮      ╭────────────────────────╮
          │          0   1   2  3 │      │  4   5   6   7         │
          │ 8    9  10  11  12 13 │      │ 14  15  16  17  18  19 │
          │     20  21  22  23 24  ─╮ ╭─   25  26  27  28  29     │
          ╰─────────────╮(30) 31 32 │ │ 33 34 (35)╭───────────────╯
                        ╰───────────╯ ╰───────────╯           
    */

    keymap {
        compatible = "zmk,keymap";
    /* MAIN LAYER
          ╭──────────────────╮     ╭──────────────────╮
          │       w  e  r  t │     │ y  u  i  o       │
          │ q  a  x  d  f  g │     │ h  j  k  l  p  ñ │
          │    z  x  c  v  b  ─╮ ╭─  n  m  ,  .  ç    │
          ╰─────╮(M)  Ent  Spc │ │ RS  Bsp  (Ma)╭─────╯
                ╰──────────────╯ ╰──────────────╯           
    */
        MAIN_layer {
            bindings = <
                              &kp W      &kp E       &kp R      &kp T            &kp Y   &kp U  &kp I    &kp O
            &kp Q &mt LSHFT A &mt RALT S &mt LCTRL D &mt LGUI F &kp G            &kp H  &mt RGUI J &mt RCTRL K &mt RALT L &mt RSHFT P &kp SEMI
                  &kp Z       &kp X      &lt FN C    &lt SYM V  &kp B            &kp N  &lt SYM M  &td0        &td1       &kp BSLH
                                         &kp C_MUTE  &kp ENTER  &lt NAV SPC      &td2 &kp BSPC   &my_macro
            >;

			sensor-bindings = <&inc_dec_kp DOWN UP &inc_dec_kp RIGHT LEFT>;
        };

    /* SYM LAYER

          ╭──────────────────╮     ╭──────────────────╮
          │       7  8  9  / │     │ \  ¨  ^  º       │
          │ ,  +  1  2  3  * │     │ ?  ´  '  @  ~  ¬ │
          │    -  4  5  6  =  ─╮ ╭─  ¿  `  €  #  ¡    │
          ╰───────╮(M)  Ent  0 │ │ RS  Bsp  (M)╭──────╯
                  ╰────────────╯ ╰─────────────╯          
    */
        SYM_layer {
            bindings = <
                            &kp N7 &kp N8 &kp N9   &kp AMPS       &kp LC(RA(GRAVE)) &kp LS(SQT)  &kp LBRC &td3
            &kp COMMA &kp RBKT   &kp N1 &kp N2 &kp N3  &kp RBRC   &kp LS(MINUS)    &kp SQT  &kp MINUS &kp LC(RA(N2))   &kp LC(RA(N4))  &kp LC(RA(N6))
                  &kp SLASH &kp N4 &kp N5 &kp N6  &kp RPAR       &kp LS(EQUAL)  &kp LBKT  &kp LC(RA(N5)) &kp LC(RA(N3))   &kp EQUAL
                                   &trans &trans  &kp N0         &kp RSHFT &trans    &trans
            >;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        NAV_layer {
            bindings = <
                                  &kp PG_DN &kp UP       &kp PG_UP    &kp C_PP             &kp LG(P)  &kp LG(D)    &kp LG(E)    &none
            &kp C_PREV &kp C_NEXT &kp LEFT  &kp DOWN     &kp RIGHT    &kp LC(TAB)          &kp LG(L)  &kp RGUI     &kp RCTRL    &kp RALT    &none &kp DEL
                       &kp HOME   &kp END   &kp C_VOL_DN &kp C_VOL_UP &kp LS(LC(TAB))      &kp K_REDO &kp K_COPY   &kp K_PASTE  &kp K_CUT   &kp K_UNDO
                                            &trans       &none        &none                &trans     &kp DEL      &trans
            >;

			sensor-bindings = <&inc_dec_kp PG_DN PG_UP &inc_dec_kp PG_DN PG_UP>;
        };

        FN_layer {
            bindings = <
                              &kp F7 &kp F8 &kp F9 &kp F10      &none  &kp C_BRI_DN &kp C_BRI_UP &none
            &reset &bt BT_CLR &kp F1 &kp F2 &kp F3 &kp F11      &none  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_CLR &reset
                   &kp PSCRN  &kp F4 &kp F5 &kp F6 &kp F12      &none  &none        &bt BT_SEL 3 &bt BT_SEL 4 &none
                                     &trans &trans &trans       &trans &trans       &trans
            >;

			sensor-bindings = <&inc_dec_kp PG_DN PG_UP>;
        };
    };
};