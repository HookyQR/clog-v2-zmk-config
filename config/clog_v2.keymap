#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define MAIN 0
#define SYM 1
#define NAV 2
#define FN 3

&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <250>;
};

/ {
    behaviors {
        dot_excl: dot_excl {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_EXCL";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp EXCL>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        skq: sticky_key_quick_release {
            compatible = "zmk,behavior-sticky-key";
            label = "STICKY_KEY_QUICK_RELEASE";
            #binding-cells = <1>;
            bindings = <&kp>;
            release-after-ms = <1000>;
            quick-release;
        };

        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&lt FN COMMA>, <&kp LS(COMMA)>;
        };
        
        td1: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_1";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp DOT>, <&kp LS(DOT)>;
        };

        td2: tap_dance_2 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_2";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp BSLH>, <&kp LS(BSLH)>;
        };

        td3: tap_dance_3 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_3";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&skq RSHFT>, <&kp LS(CAPS)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <30>;
            key-positions = <21 22>;
            bindings = <&kp ESC>;
            layers = <0>;
        };

        combo_tab {
            timeout-ms = <30>;
            key-positions = <22 23>;
            bindings = <&kp TAB>;
            layers = <0>;
        };

        combo_next_tab {
            timeout-ms = <30>;
            key-positions = <0 3>;
            bindings = <&kp LC(TAB)>;
            layers = <0>;
        };

        combo_prev_tab {
            timeout-ms = <30>;
            key-positions = <0 2>;
            bindings = <&kp LS(LC(TAB))>;
            layers = <0>;
        };

        combo_grave {
            timeout-ms = <30>;
            key-positions = <6 7>;
            bindings = <&kp GRAVE>;
            layers = <0>;
        };

        combo_okey {
            timeout-ms = <30>;
            key-positions = <2 3>;
            bindings = <&kp ASTRK>;
            layers = <0>;
        };

        combo_obra {
            timeout-ms = <30>;
            key-positions = <12 13>;
            bindings = <&kp LC(RA(LBRC))>;
            layers = <0>;
        };

        combo_omi {
            timeout-ms = <30>;
            key-positions = <23 24>;
            bindings = <&kp GRAVE>;
            layers = <0>;
        };

        combo_ckey {
            timeout-ms = <30>;
            key-positions = <4 5>;
            bindings = <&kp LPAR>;
            layers = <0>;
        };

        combo_cbra {
            timeout-ms = <30>;
            key-positions = <14 15>;
            bindings = <&kp GRAVE>;
            layers = <0>;
        };

        combo_cma {
            timeout-ms = <30>;
            key-positions = <25 26>;
            bindings = <&kp GRAVE>;
            layers = <0>;
        };
    };

    /* 
          ╭───────────────────────╮      ╭────────────────────────╮
          │          0   1   2  3 │      │  4   5   6   7         │
          │ 8    9  10  11  12 13 │      │ 14  15  16  17  18  19 │
          │     20  21  22  23 24  ─╮ ╭─   25  26  27  28  29     │
          ╰─────────────╮(30) 31 32 │ │ 33 34 (35)╭───────────────╯
                        ╰───────────╯ ╰───────────╯           
    */

    keymap {
        compatible = "zmk,keymap";

        MAIN_layer {
            bindings = <
                              &kp W      &kp E       &kp R      &kp T            &kp Y   &kp U  &kp I    &kp O
            &kp Q &mt LSHFT A &mt RALT S &mt LCTRL D &mt LGUI F &kp G            &kp H  &mt RGUI J &mt RCTRL K &mt RALT L &mt RSHFT P &kp SEMI
                  &kp Z       &kp X      &lt FN C    &lt SYM V  &kp B            &kp N  &lt SYM M  &td0    &td1      &td2
                                         &kp C_MUTE  &kp ENTER  &lt NAV SPC      &td3 &kp BSPC   &kp C_MUTE
            >;

			sensor-bindings = <&inc_dec_kp DOWN UP &inc_dec_kp RIGHT LEFT>;
        };

        SYM_layer {
            bindings = <
                            &kp N7 &kp N8 &kp N9  &kp RBRC       &kp TILDE &kp LBRC  &kp RBRC &kp HASH
            &kp DOT &kp COMMA   &kp N1 &kp N2 &kp N3  &kp RPAR   &kp LT    &kp LPAR  &kp RPAR &kp GT   &kp CARET  &none
                  &kp AMPS &kp N4 &kp N5 &kp N6  &kp RBKT       &kp DLLR  &kp LBKT  &kp RBKT &kp AT   &kp PRCNT
                                   &trans &trans  &kp N0         &kp RSHFT &trans    &trans
            >;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        NAV_layer {
            bindings = <
                                  &kp PG_DN &kp UP       &kp PG_UP    &kp C_PP             &kp LG(P) &kp LG(D)     &kp LS(LG(D)) &kp LG(Q)
            &kp C_PREV &kp C_NEXT &kp LEFT  &kp DOWN     &kp RIGHT    &kp LC(TAB)          &kp LG(L) &kp RGUI      &kp RCTRL     &kp RALT  &none &none
                       &kp HOME   &kp END   &kp C_VOL_DN &kp C_VOL_UP &kp LS(LC(TAB))      &none     &kp LG(ENTER) &kp LG(O)     &kp LG(N) &none
                                            &trans       &none        &none                &trans    &kp DEL       &trans
            >;

			sensor-bindings = <&inc_dec_kp PG_DN PG_UP &inc_dec_kp PG_DN PG_UP>;
        };

        FN_layer {
            bindings = <
                              &kp F7 &kp F8 &kp F9 &kp F10      &none  &kp C_BRI_DN &kp C_BRI_UP &none
            &reset &bt BT_CLR &kp F1 &kp F2 &kp F3 &kp F11      &none  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_CLR &reset
                   &kp PSCRN  &kp F4 &kp F5 &kp F6 &kp F12      &none  &none        &bt BT_SEL 3 &bt BT_SEL 4 &none
                                     &trans &trans &trans       &trans &trans       &trans
            >;

			sensor-bindings = <&inc_dec_kp PG_DN PG_UP>;
        };
    };
};